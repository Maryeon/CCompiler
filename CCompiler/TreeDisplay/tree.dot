digraph absynTree{
	Block1 [label = "Block"];
	FunctionDeclaration1 [label = "FunDec"];
	Const1 [label = "int"];
	Identifier1 [label = "id"];
	Const2 [label = "f"];
	VariableDeclaration1 [label = "VarDec"];
	Const3 [label = "int"];
	Identifier2 [label = "id"];
	Const4 [label = "n"];
	NULL1 [label = "NULL"];
	Block2 [label = "Block"];
	Statement1 [label = "If"];
	BinaryOperation1 [label = "=="];
	Identifier3 [label = "id"];
	Const5 [label = "n"];
	Integer1 [label = "const"];
	Const6 [label = "1"];
	Block3 [label = "Block"];
	Statement2 [label = "Return"];
	Integer2 [label = "const"];
	Const7 [label = "1"];
	Block4 [label = "Block"];
	Statement3 [label = "Return"];
	Integer3 [label = "const"];
	Const8 [label = "0"];
	FunctionDeclaration2 [label = "FunDec"];
	Const9 [label = "int"];
	Identifier4 [label = "id"];
	Const10 [label = "main"];
	Block5 [label = "Block"];
	VariableDeclaration2 [label = "VarDec"];
	Const11 [label = "int"];
	Identifier5 [label = "id"];
	Const12 [label = "a"];
	FunctionCall1 [label = "call"];
	Identifier6 [label = "id"];
	Const13 [label = "f"];
	Integer4 [label = "const"];
	Const14 [label = "5"];
	Statement4 [label = "Return"];
	Integer5 [label = "const"];
	Const15 [label = "0"];
	FunctionDeclaration1 -> Const1;
	Identifier1 -> Const2;
	FunctionDeclaration1 -> Identifier1;
	VariableDeclaration1 -> Const3;
	Identifier2 -> Const4;
	VariableDeclaration1 -> Identifier2;
	VariableDeclaration1 -> NULL1;
	FunctionDeclaration1 -> VariableDeclaration1;
	Identifier3 -> Const5;
	BinaryOperation1 -> Identifier3;
	Integer1 -> Const6;
	BinaryOperation1 -> Integer1;
	Statement1 -> BinaryOperation1;
	Integer2 -> Const7;
	Statement2 -> Integer2;
	Block3 -> Statement2;
	Statement1 -> Block3;
	Integer3 -> Const8;
	Statement3 -> Integer3;
	Block4 -> Statement3;
	Statement1 -> Block4;
	Block2 -> Statement1;
	FunctionDeclaration1 -> Block2;
	Block1 -> FunctionDeclaration1;
	FunctionDeclaration2 -> Const9;
	Identifier4 -> Const10;
	FunctionDeclaration2 -> Identifier4;
	VariableDeclaration2 -> Const11;
	Identifier5 -> Const12;
	VariableDeclaration2 -> Identifier5;
	Identifier6 -> Const13;
	FunctionCall1 -> Identifier6;
	Integer4 -> Const14;
	FunctionCall1 -> Integer4;
	VariableDeclaration2 -> FunctionCall1;
	Block5 -> VariableDeclaration2;
	Integer5 -> Const15;
	Statement4 -> Integer5;
	Block5 -> Statement4;
	FunctionDeclaration2 -> Block5;
	Block1 -> FunctionDeclaration2;
}